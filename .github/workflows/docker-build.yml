name: Build and publish Docker images

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - id: app
            context: .
            file: docker/Dockerfile.app
            build-args: |
              GOPRIVATE_ARG=${{ secrets.GOPRIVATE }}
              GOPROXY_ARG=${{ secrets.GOPROXY }}
              GOSUMDB_ARG=off
          - id: docreader
            context: .
            file: docker/Dockerfile.docreader
            build-args: |
              PLATFORM=linux/amd64
          - id: frontend
            context: ./frontend
            file: ./frontend/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.id }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: ${{ github.event_name == 'push' }}
          platforms: linux/amd64
          build-args: ${{ matrix.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.id }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.id }}:buildcache,mode=max
